<?php
/**
 * @file
 * Meta tag tests for Agov.
 */

class AgovMetaDataTest extends AgovTestBase  {

  /**
   * Provides test info.
   */
  public static function getInfo() {
    return array(
      'name'  => 'Agov Metadata tests',
      'description'  => "Tests for Agov metadata.",
      'group' => 'Agov',
    );
  }

  /**
   * Setup function.
   */
  public function setUp() {
    parent::setUp();
  }

  /**
   * Test to ensure correct meta tags are in place.
   */
  public function testMetaData() {
    global $base_url;

    // Check the home page.
    $this->drupalGet('/');
    $this->assertRaw('name="DCTERMS.creator" content="Agov"', 'Found DCTERMS.creator with value `Agov`');
    $this->assertRaw('name="DCTERMS.date"', 'Found DCTERMS.date');
    $this->assertRaw('name="DCTERMS.description" content="Agov website"', 'Found DCTERMS.description with value `Agov website`');
    $this->assertRaw('name="DCTERMS.format" content="text/html"', 'Found DCTERMS.format with value `text/html`');
    $this->assertRaw('name="DCTERMS.publisher" content="Agov"', 'Found DCTERMS.publisher with value `Agov`');
    $this->assertRaw('name="DCTERMS.subject" content="Agov website"', 'Found DCTERMS.subject with value `Agov website`');
    $this->assertRaw('name="DCTERMS.title" content="Agov"', 'Found DCTERMS.title with value `Agov`');
    $this->assertRaw('name="DCTERMS.type" content="other"', 'Found DCTERMS.type with value `other`');

    // Check a node page.
    $this->drupalGet('about-us');
    $node = db_select('node', 'n')->fields('n')->condition('title', 'About Us')->condition('type', 'page')->execute()->fetchObject();
    $node = node_load($node->nid);
    $node_path = $base_url . '/node/' . $node->nid;

    $this->assertRaw('name="DCTERMS.creator" content="placeholder-for-uid-1"', 'Found DCTERMS.creator with value `placeholder-for-uid-1`');
    $this->assertRaw('name="DCTERMS.date"', 'Found DCTERMS.date');
    $this->assertRaw('name="DCTERMS.description" content="' . strip_tags($node->body[LANGUAGE_NONE][0]['value']), 'Found DCTERMS.description with value `' . strip_tags($node->body[LANGUAGE_NONE][0]['value']) . '`');
    $this->assertRaw('name="DCTERMS.format" content="text/html"', 'Found DCTERMS.format with value `text/html`');
    $this->assertRaw('name="DCTERMS.identifier" content="' . $node_path . '"', 'Found DCTERMS.identifier with value `' . $node_path . '`');
    $this->assertRaw('name="DCTERMS.language" content="en"', 'Found DCTERMS.language with value `en`');
    $this->assertRaw('name="DCTERMS.publisher" content="Agov"', 'Found DCTERMS.publisher with value `Agov`');
    $this->assertRaw('name="DCTERMS.subject" content="Agov website"', 'Found DCTERMS.subject with value `Agov website`');
    $this->assertRaw('name="DCTERMS.title" content="About Us"', 'Found DCTERMS.title with value `About Us`');
    $this->assertRaw('name="DCTERMS.type" content="Text"', 'Found DCTERMS.type with value `Text`');

    // Check a term page.
    $term = db_select('taxonomy_term_data', 't')->fields('t')->execute()->fetchObject();
    $term_path = $base_url . '/taxonomy/term/' . $term->tid;
    $this->drupalGet('taxonomy/term/' . $term->tid);
    $this->assertRaw('name="DCTERMS.creator" content="Agov"', 'Found DCTERMS.creator with value `Agov`');
    $this->assertRaw('name="DCTERMS.date"', 'Found DCTERMS.date');
    if ($term->description) {
      $this->assertRaw('name="DCTERMS.description" content="' . $term->description . '"', 'Found DCTERMS.description with value `' . $term->description . '`');
    }
    $this->assertRaw('name="DCTERMS.format" content="text/html"', 'Found DCTERMS.format with value `text/html`');
    $this->assertRaw('name="DCTERMS.identifier" content="' . $term_path . '"', 'Found DCTERMS.identifier with value `' . $term_path . '`');
    $this->assertRaw('name="DCTERMS.publisher" content="Agov"', 'Found DCTERMS.publisher with value `Agov`');
    $this->assertRaw('name="DCTERMS.subject" content="Agov website"', 'Found DCTERMS.subject with value `Agov website`');
    $this->assertRaw('name="DCTERMS.title" content="' . $term->name . '"', 'Found DCTERMS.title with value `' . $term->name . '`');
    $this->assertRaw('name="DCTERMS.type" content="other"', 'Found DCTERMS.type with value `other`');

    // Check a user page.
    $uid = $this->testUser->uid;
    $name = $this->testUser->name;
    $pass = $this->testUser->pass_raw;
    $created = $this->testUser->created;
    $this->drupalPost('user', array('name' => $name, 'pass' => $pass), t('Log in'));
    $this->drupalGet('user/' . $uid);
    $user_path = $base_url . '/user/' . $uid;
    $this->assertRaw('name="DCTERMS.creator" content="' . $name . '"', 'Found DCTERMS.creator with value `' . $name . '`');
    $this->assertRaw('name="DCTERMS.date" content="' . date('Y-m-d\TH:iP', $created) . '"', 'Found DCTERMS.date with value `' . date('Y-m-d\TH:iP', $created) . '`');
    $this->assertRaw('name="DCTERMS.description" content="Agov website"', 'Found DCTERMS.description with value `Agov website`');
    $this->assertRaw('name="DCTERMS.format" content="text/html"', 'Found DCTERMS.format with value `text/html`');
    $this->assertRaw('name="DCTERMS.identifier" content="' . $user_path . '"', 'Found DCTERMS.format with value `' . $user_path . '`');
    $this->assertRaw('name="DCTERMS.publisher" content="Agov"', 'Found DCTERMS.publisher with value `Agov`');
    $this->assertRaw('name="DCTERMS.subject" content="Agov website"', 'Found DCTERMS.subject with value `Agov website`');
    $this->assertRaw('name="DCTERMS.title" content="' . $name . '"', 'Found DCTERMS.title with value `' . $name . '`');
    $this->assertRaw('name="DCTERMS.type" content="other"', 'Found DCTERMS.type with value `other`');

  }

}
