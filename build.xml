<project name="agov" default="build">

  <!--           -->
  <!--  Imports  -->
  <!-- ========= -->

  <import file="vendor/previousnext/phing-phpqatools/build.xml" optional="true" />
  <import file="vendor/previousnext/phing-compass/build.xml"    optional="true" />
  <import file="vendor/previousnext/phing-behat/build.xml"      optional="true" />
  <import file="vendor/previousnext/phing-drush/build.user.xml" optional="true" />

  <!--               -->
  <!--  Properties   -->
  <!-- ============= -->

  <!-- aGov. -->
  <property name="build.dir"            value="build" />
  <property name="build.drupal.dir"     value="../drupal" />
  <property name="build.profile.dir"    value="${build.drupal.dir}/profiles/agov" />
  <property name="build.symlink.source" value="${project.basedir}" />

  <!-- PHPQATools. -->
  <property name="phpqatools.sniff.ruleset" value="vendor/drupal/coder/coder_sniffer/Drupal/ruleset.xml" override="true" />
  <property name="phpqatools.sniff.dirs"    value="modules/custom themes/agov"                           override="true" />

  <!-- Compass. -->
  <property name="compass.theme" value="themes/agov" override="true" />

  <!-- Database configuration. -->
  <property name="db.username" value="root" />
  <property name="db.password" value="" />
  <property name="db.name"     value="agov_test" />
  <property name="db.host"     value="localhost" />

  <!-- Allow local environments to override. -->
  <property file="build.properties" override="true"/>

  <!--                -->
  <!--  Meta targets  -->
  <!-- ============== -->

  <target name="build"
          depends="clean, prepare, validate, make, drupal:install, test"
          description="Build the project">
    <phingcall target="login" />
  </target>

  <target name="build-no-tests"
          depends="clean, prepare, validate, make, drupal:install"
          description="Build the project">
    <phingcall target="login" />
  </target>

  <target name="build-no-make"
          depends="phpcs, drupal:install, test"
          description="Build the project without make. Good for clean installs without re-downloading components">
    <phingcall target="login" />
  </target>

  <target name="build-no-make-no-tests"
          depends="phpcs, drupal:install"
          description="Build the project without make or tests. Good for fast re-installs.">
    <phingcall target="login" />
  </target>

  <target name="build-no-install"
          depends="clean, prepare, validate, make"
          description="Builds the project without running the installer. Good for manual installer testing." />

  <target name="test"
          depends="behat"
          description="Run all tests" />

  <target name="validate"
          description="Validate the source code">
    <phingcall target="phpcs" />
    <phingcall target="phpmd" />
    <phingcall target="make:validate" />
  </target>

  <target name="prepare"
          depends="prepare:dirs, composer:install"
          description="Prepares the project for building"/>

  <!--           -->
  <!--  Targets  -->
  <!-- ========= -->

  <target name="clean"
          description="Clean the build environment">
    <phingcall target="permissions:fix" />
    <delete dir="${build.drupal.dir}" />
    <delete dir="${build.dir}" />
    <delete dir="modules/contrib"/>
    <delete dir="themes/contrib"/>
  </target>

  <target name="permissions:fix">
    <if><available file="${build.drupal.dir}/sites/default" type="dir" property="available.sites.default"/>
    <then>
      <chmod file="${build.drupal.dir}/sites/default" mode="2775" />
    </then>
    </if>
  </target>

  <target name="prepare:dirs"
          description="Prepare for build">
    <mkdir dir="${build.drupal.dir}/profiles" />
    <mkdir dir="${build.drupal.dir}/sites/default/files" />
    <chmod file="${build.drupal.dir}/sites/default/files" mode="2775" />
    <mkdir dir="${build.drupal.dir}/sites/default/files/tmp" />
    <mkdir dir="${build.drupal.dir}/sites/default/private" />
    <chmod file="${build.drupal.dir}/sites/default/private" mode="2775" />
    <symlink link="${build.drupal.dir}/profiles/agov" target="${build.symlink.source}" />
  </target>

  <target name="upgrade:check"
          description="Checks if we are testing an upgrade and if so, sets a property.">
    <condition property="is.upgrade">
      <contains string="${env.UPGRADE}" substring="7.x"/>
    </condition>
  </target>

  <target name="upgrade:prepare"
          depends="upgrade:check"
          if="is.upgrade"
          description="Downloads a previous aGov version to be updated.">
    <exec command="drush dl agov-${env.UPGRADE} --destination=.. --drupal-project-rename=drupal --yes" logoutput="true" passthru="true" checkreturn="true"/>
  </target>

  <target name="upgrade"
          depends="upgrade:check"
          if="is.upgrade"
          description="Upgrades previous aGov version with the latest.">
    <copy todir="${build.profile.dir}">
      <fileset dir="${project.basedir}"/>
    </copy>
    <exec dir="${build.drupal.dir}" command="drush updb -y" logoutput="true" passthru="true" />
  </target>

  <target name="make:validate"
          description="Verify the drush makefile is valid for d.o">
    <exec command="drush dl -y drupalorg_drush-7.x-1.x-dev --destination=${user.home}/.drush" logoutput="true" passthru="true" />
    <exec command="drush cc drush" logoutput="true" passthru="true" />
    <exec command="drush verify-makefile" logoutput="true" passthru="true" checkreturn="true"/>
  </target>

  <target name="make"
          depends="prepare:dirs, permissions:fix"
          description="Build Drupal and contrib core modules from a make file">
    <exec dir="${build.drupal.dir}" command="drush make -y profiles/agov/drupal-org.make --no-core --contrib-destination=profiles/agov" checkreturn="true" logoutput="true" passthru="true"/>
    <exec dir="${build.drupal.dir}" command="drush make -y profiles/agov/drupal-org-core.make --prepare-install" checkreturn="true" logoutput="true" passthru="true"/>
  </target>

  <target name="drupal:install"
          description="Install Drupal on a clean database">
    <exec dir="${build.drupal.dir}" command="drush site-install agov -y --site-name=aGov --db-url=mysql://${db.username}:${db.password}@${db.host}/${db.name} agov_install_additional_options.install=1 agov" logoutput="true" passthru="true" />
    <exec dir="${build.drupal.dir}" command="drush vset -y file_private_path 'sites/default/private'" logoutput="true" passthru="true" />
    <exec dir="${build.drupal.dir}" command="drush vset -y file_temporary_path 'sites/default/files/tmp'" logoutput="true" passthru="true" />
    <phingcall target="permissions:fix" />
  </target>

  <target name="behat"
          description="Run behat tests">
    <exec command="drush -r ${build.drupal.dir} vset -y password_policy_new_login_change 0" />

    <!-- Call the parent target. -->
    <phingcall target="behat.prepare" />
    <phingcall target="behat.behat" />

    <exec command="drush -r ${build.drupal.dir} vset -y password_policy_new_login_change 1" />
  </target>

  <target name="devify"
          description="Set up dev environment defaults">
    <exec dir="${build.drupal.dir}" command="drush -l ${app.uri} en devel search_krumo diff --yes" logoutput="true" passthru="true" />
  </target>

  <target name="composer:update">
    <exec command="composer update --prefer-dist" logoutput="true" passthru="true"/>
  </target>

  <target name="composer:install">
    <exec command="composer install --prefer-dist" logoutput="true" passthru="true"/>
  </target>
</project>
