<?php
/**
 * @file
 * Code for the aGov Paragraphs feature.
 */

include_once 'agov_paragraphs.features.inc';

/**
 * Implements hook_entity_info_alter().
 */
function agov_paragraphs_entity_info_alter(&$entity_info) {
  $entity_info['paragraphs_item']['view modes']['teaser_title'] = array(
    'label' => t('Teaser (title first)'),
    'custom settings' => TRUE,
  );
  $entity_info['paragraphs_item']['view modes']['teaser_image'] = array(
    'label' => t('Teaser (image first)'),
    'custom settings' => TRUE,
  );
  $entity_info['paragraphs_item']['view modes']['tile_text'] = array(
    'label' => t('Tile (text)'),
    'custom settings' => TRUE,
  );
  $entity_info['paragraphs_item']['view modes']['tile_image'] = array(
    'label' => t('Tile (image)'),
    'custom settings' => TRUE,
  );
  $entity_info['paragraphs_item']['view modes']['line'] = array(
    'label' => t('Single line'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_entity_view().
 */
function agov_paragraphs_entity_view($entity, $type, $view_mode, $langcode) {

  if ($type == 'paragraphs_item') {

    // Process any Paragraphs with layout settings.
    if (isset($entity->field_pbundle_section_layout[LANGUAGE_NONE][0]) && !empty($entity->field_pbundle_section_layout[LANGUAGE_NONE][0])) {

      // Section arrangements are defined by the Arrangement entity.
      $arrangements = entity_load('arrangement', array($entity->field_pbundle_section_layout[LANGUAGE_NONE][0]['target_id']));
      $arrangement = reset($arrangements);
      $entity->content['#attributes']['class'][] = 'paragraphs--layout-' . check_plain($arrangement->field_machine_name[LANGUAGE_NONE][0]['value']);

      if ($entity->bundle == 'section') {
        // Add a class for styling the content.
        $entity->content['field_pbundle_section_content']['#attributes']['class'][] = 'paragraphs--layout-' . check_plain($arrangement->field_machine_name[LANGUAGE_NONE][0]['value']);
      }
      if ($entity->bundle == 'view') {
        $entity->content['field_pbundle_view']['#attributes']['class'][] = 'paragraphs--layout-' . check_plain($arrangement->field_machine_name[LANGUAGE_NONE][0]['value']);
      }
    }
  }
}

/**
 * Implements theme_preprocess_paragraphs_item().
 */
function agov_paragraphs_preprocess_paragraphs_item(&$variables, $hook) {

  $variables['classes_array'] = array();

  $variables['classes_array'][] = drupal_html_class('paragraphs-items-' . $variables['view_mode']);

  // Paragraphs doesn't properly add the element classes.
  if (isset($variables['element']['#attributes']['class'])
    && !empty($variables['element']['#attributes']['class'])
    && is_array($variables['element']['#attributes']['class'])
  ) {
    foreach ($variables['element']['#attributes']['class'] as $class_name) {
      if (!isset($variables['classes_array'][$class_name])) {
        $variables['classes_array'][] = drupal_html_class($class_name);
      }
    }
  }
}
